[project]
name = "app"
version = "0.1.0"
description = "Centroid application backend"
license = "Apache-2.0"
requires-python = ">=3.10"
authors = [
    {name = "Admin", email = "admin@centroid.run"}
]
maintainers = [
    {name = "Centroid Team", email = "team@centroid.run"}
]
keywords = ["api", "backend", "fastapi"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "uvicorn[standard]>=0.24.0.post1",
    # "mcp>=1.7.1,<2.0.0",
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "pydantic>2.0",
    "emails<1.0,>=0.6",
    "gunicorn>=21.2.0",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.24",
    "bcrypt==4.0.1",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "nanoid>=2.0.0",
    "pyjwt<3.0.0,>=2.8.0",
    "pyhumps>=3.8.0",
    "colorama>=0.4.6",
    "amplitude-analytics>=1.1.4",
    "chromadb>=0.6.3",
    "openapi3-parser>=1.1.19",
    "datamodel-code-generator>=0.28.5",
    "cryptography>=41.0.1",
    "fastmcp>=2.2.6",
    "psutil>=5.9.4",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    "pytest-asyncio<1.0.0,>=0.22.0",
    "pre-commit>=3.8.0",
]

[build-system]
requires = ["hatchling>=1.0.0"]
build-backend = "hatchling.build"


[project.urls]
"Homepage" = "https://centroid.run"
"Repository" = "https://github.com/NeuclaiLabs/centroid"
"Documentation" = "https://docs.centroid.run"
"Bug Tracker" = "https://github.com/NeuclaiLabs/centroid/issues"
"Changelog" = "https://github.com/NeuclaiLabs/centroid/blob/main/CHANGELOG.md"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[project.scripts]
start = "app.main:app"
dev = "app.main:dev"
test = "pytest:main"
