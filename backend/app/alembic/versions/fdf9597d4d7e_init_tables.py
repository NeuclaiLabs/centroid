"""Init tables

Revision ID: fdf9597d4d7e
Revises:
Create Date: 2025-06-17 12:32:02.780773

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'fdf9597d4d7e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mcp_templates',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='mcptemplatestatus'), nullable=False),
    sa.Column('kind', sa.Enum('OFFICIAL', 'EXTERNAL', 'OPENAPI', name='mcptemplatekind'), nullable=False),
    sa.Column('transport', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('run', sa.JSON(), nullable=True),
    sa.Column('tools', sa.JSON(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_agent', sa.Boolean(), nullable=False),
    sa.Column('instructions', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mcp_templates_kind'), 'mcp_templates', ['kind'], unique=False)
    op.create_index(op.f('ix_mcp_templates_name'), 'mcp_templates', ['name'], unique=False)
    op.create_index(op.f('ix_mcp_templates_status'), 'mcp_templates', ['status'], unique=False)
    op.create_table('teams',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teams_created_at'), 'teams', ['created_at'], unique=False)
    op.create_index(op.f('ix_teams_name'), 'teams', ['name'], unique=False)
    op.create_index(op.f('ix_teams_updated_at'), 'teams', ['updated_at'], unique=False)
    op.create_table('users',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_updated_at'), 'users', ['updated_at'], unique=False)
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('owner_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_owner_id'), 'item', ['owner_id'], unique=False)
    op.create_index(op.f('ix_item_title'), 'item', ['title'], unique=False)
    op.create_table('mcp_servers',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='mcpserverstatus'), nullable=False),
    sa.Column('kind', sa.Enum('OFFICIAL', 'EXTERNAL', 'OPENAPI', name='mcptemplatekind'), nullable=False),
    sa.Column('transport', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('template_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('run', sa.JSON(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('owner_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tools', sa.JSON(), nullable=True),
    sa.Column('state', sa.Enum('PENDING', 'INITIALIZING', 'RUNNING', 'STOPPING', 'STOPPED', 'RESTARTING', 'DISCONNECTED', 'ERROR', name='mcpserverstate'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('encrypted_secrets', sa.String(), nullable=True),
    sa.Column('is_agent', sa.Boolean(), nullable=False),
    sa.Column('instructions', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['template_id'], ['mcp_templates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mcp_servers_kind'), 'mcp_servers', ['kind'], unique=False)
    op.create_index(op.f('ix_mcp_servers_name'), 'mcp_servers', ['name'], unique=False)
    op.create_index(op.f('ix_mcp_servers_owner_id'), 'mcp_servers', ['owner_id'], unique=False)
    op.create_index(op.f('ix_mcp_servers_state'), 'mcp_servers', ['state'], unique=False)
    op.create_index(op.f('ix_mcp_servers_status'), 'mcp_servers', ['status'], unique=False)
    op.create_index(op.f('ix_mcp_servers_template_id'), 'mcp_servers', ['template_id'], unique=False)
    op.create_table('projects',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('files', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('team_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_created_at'), 'projects', ['created_at'], unique=False)
    op.create_index(op.f('ix_projects_model'), 'projects', ['model'], unique=False)
    op.create_index(op.f('ix_projects_team_id'), 'projects', ['team_id'], unique=False)
    op.create_index(op.f('ix_projects_title'), 'projects', ['title'], unique=False)
    op.create_index(op.f('ix_projects_updated_at'), 'projects', ['updated_at'], unique=False)
    op.create_table('team_members',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'MEMBER', 'VIEWER', name='teamrole'), nullable=False),
    sa.Column('invitation_status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', name='teaminvitationstatus'), nullable=False),
    sa.Column('team_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'user_id'),
    sa.UniqueConstraint('team_id', 'email', name='uq_team_email')
    )
    op.create_index(op.f('ix_team_members_email'), 'team_members', ['email'], unique=False)
    op.create_index(op.f('ix_team_members_invitation_status'), 'team_members', ['invitation_status'], unique=False)
    op.create_index(op.f('ix_team_members_role'), 'team_members', ['role'], unique=False)
    op.create_index(op.f('ix_team_members_team_id'), 'team_members', ['team_id'], unique=False)
    op.create_index(op.f('ix_team_members_user_id'), 'team_members', ['user_id'], unique=False)
    op.create_table('chats',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('visibility', sa.Enum('PRIVATE', 'SHARED', 'PUBLIC', name='chatvisibility'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chats_created_at'), 'chats', ['created_at'], unique=False)
    op.create_index(op.f('ix_chats_path'), 'chats', ['path'], unique=False)
    op.create_index(op.f('ix_chats_project_id'), 'chats', ['project_id'], unique=False)
    op.create_index(op.f('ix_chats_title'), 'chats', ['title'], unique=False)
    op.create_index(op.f('ix_chats_updated_at'), 'chats', ['updated_at'], unique=False)
    op.create_index(op.f('ix_chats_user_id'), 'chats', ['user_id'], unique=False)
    op.create_index(op.f('ix_chats_visibility'), 'chats', ['visibility'], unique=False)
    op.create_table('documents',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('kind', sa.Enum('TEXT', 'CODE', 'IMAGE', 'SHEET', name='documentkind'), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'created_at')
    )
    op.create_index(op.f('ix_documents_created_at'), 'documents', ['created_at'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_index(op.f('ix_documents_kind'), 'documents', ['kind'], unique=False)
    op.create_index(op.f('ix_documents_project_id'), 'documents', ['project_id'], unique=False)
    op.create_index(op.f('ix_documents_title'), 'documents', ['title'], unique=False)
    op.create_index(op.f('ix_documents_updated_at'), 'documents', ['updated_at'], unique=False)
    op.create_index(op.f('ix_documents_user_id'), 'documents', ['user_id'], unique=False)
    op.create_table('secrets',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('owner_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mcp_server_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('environment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('kind', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('encrypted_value', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['mcp_server_id'], ['mcp_servers.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_secrets_created_at'), 'secrets', ['created_at'], unique=False)
    op.create_index(op.f('ix_secrets_environment'), 'secrets', ['environment'], unique=False)
    op.create_index(op.f('ix_secrets_kind'), 'secrets', ['kind'], unique=False)
    op.create_index(op.f('ix_secrets_mcp_server_id'), 'secrets', ['mcp_server_id'], unique=False)
    op.create_index(op.f('ix_secrets_name'), 'secrets', ['name'], unique=False)
    op.create_index(op.f('ix_secrets_owner_id'), 'secrets', ['owner_id'], unique=False)
    op.create_index(op.f('ix_secrets_updated_at'), 'secrets', ['updated_at'], unique=False)
    op.create_table('messages',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('chat_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parts', sa.JSON(), nullable=True),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_chat_id'), 'messages', ['chat_id'], unique=False)
    op.create_index(op.f('ix_messages_created_at'), 'messages', ['created_at'], unique=False)
    op.create_index(op.f('ix_messages_role'), 'messages', ['role'], unique=False)
    op.create_table('streams',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('chat_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_streams_chat_id'), 'streams', ['chat_id'], unique=False)
    op.create_index(op.f('ix_streams_created_at'), 'streams', ['created_at'], unique=False)
    op.create_table('suggestions',
    sa.Column('original_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('suggested_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('document_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_suggestions_created_at'), 'suggestions', ['created_at'], unique=False)
    op.create_index(op.f('ix_suggestions_document_id'), 'suggestions', ['document_id'], unique=False)
    op.create_index(op.f('ix_suggestions_is_resolved'), 'suggestions', ['is_resolved'], unique=False)
    op.create_index(op.f('ix_suggestions_updated_at'), 'suggestions', ['updated_at'], unique=False)
    op.create_index(op.f('ix_suggestions_user_id'), 'suggestions', ['user_id'], unique=False)
    op.create_table('votes',
    sa.Column('is_upvoted', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('chat_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'message_id', name='uq_user_message_vote')
    )
    op.create_index(op.f('ix_votes_chat_id'), 'votes', ['chat_id'], unique=False)
    op.create_index(op.f('ix_votes_created_at'), 'votes', ['created_at'], unique=False)
    op.create_index(op.f('ix_votes_is_upvoted'), 'votes', ['is_upvoted'], unique=False)
    op.create_index(op.f('ix_votes_message_id'), 'votes', ['message_id'], unique=False)
    op.create_index(op.f('ix_votes_updated_at'), 'votes', ['updated_at'], unique=False)
    op.create_index(op.f('ix_votes_user_id'), 'votes', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_votes_user_id'), table_name='votes')
    op.drop_index(op.f('ix_votes_updated_at'), table_name='votes')
    op.drop_index(op.f('ix_votes_message_id'), table_name='votes')
    op.drop_index(op.f('ix_votes_is_upvoted'), table_name='votes')
    op.drop_index(op.f('ix_votes_created_at'), table_name='votes')
    op.drop_index(op.f('ix_votes_chat_id'), table_name='votes')
    op.drop_table('votes')
    op.drop_index(op.f('ix_suggestions_user_id'), table_name='suggestions')
    op.drop_index(op.f('ix_suggestions_updated_at'), table_name='suggestions')
    op.drop_index(op.f('ix_suggestions_is_resolved'), table_name='suggestions')
    op.drop_index(op.f('ix_suggestions_document_id'), table_name='suggestions')
    op.drop_index(op.f('ix_suggestions_created_at'), table_name='suggestions')
    op.drop_table('suggestions')
    op.drop_index(op.f('ix_streams_created_at'), table_name='streams')
    op.drop_index(op.f('ix_streams_chat_id'), table_name='streams')
    op.drop_table('streams')
    op.drop_index(op.f('ix_messages_role'), table_name='messages')
    op.drop_index(op.f('ix_messages_created_at'), table_name='messages')
    op.drop_index(op.f('ix_messages_chat_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_secrets_updated_at'), table_name='secrets')
    op.drop_index(op.f('ix_secrets_owner_id'), table_name='secrets')
    op.drop_index(op.f('ix_secrets_name'), table_name='secrets')
    op.drop_index(op.f('ix_secrets_mcp_server_id'), table_name='secrets')
    op.drop_index(op.f('ix_secrets_kind'), table_name='secrets')
    op.drop_index(op.f('ix_secrets_environment'), table_name='secrets')
    op.drop_index(op.f('ix_secrets_created_at'), table_name='secrets')
    op.drop_table('secrets')
    op.drop_index(op.f('ix_documents_user_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_updated_at'), table_name='documents')
    op.drop_index(op.f('ix_documents_title'), table_name='documents')
    op.drop_index(op.f('ix_documents_project_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_kind'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_created_at'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_chats_visibility'), table_name='chats')
    op.drop_index(op.f('ix_chats_user_id'), table_name='chats')
    op.drop_index(op.f('ix_chats_updated_at'), table_name='chats')
    op.drop_index(op.f('ix_chats_title'), table_name='chats')
    op.drop_index(op.f('ix_chats_project_id'), table_name='chats')
    op.drop_index(op.f('ix_chats_path'), table_name='chats')
    op.drop_index(op.f('ix_chats_created_at'), table_name='chats')
    op.drop_table('chats')
    op.drop_index(op.f('ix_team_members_user_id'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_team_id'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_role'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_invitation_status'), table_name='team_members')
    op.drop_index(op.f('ix_team_members_email'), table_name='team_members')
    op.drop_table('team_members')
    op.drop_index(op.f('ix_projects_updated_at'), table_name='projects')
    op.drop_index(op.f('ix_projects_title'), table_name='projects')
    op.drop_index(op.f('ix_projects_team_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_model'), table_name='projects')
    op.drop_index(op.f('ix_projects_created_at'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_mcp_servers_template_id'), table_name='mcp_servers')
    op.drop_index(op.f('ix_mcp_servers_status'), table_name='mcp_servers')
    op.drop_index(op.f('ix_mcp_servers_state'), table_name='mcp_servers')
    op.drop_index(op.f('ix_mcp_servers_owner_id'), table_name='mcp_servers')
    op.drop_index(op.f('ix_mcp_servers_name'), table_name='mcp_servers')
    op.drop_index(op.f('ix_mcp_servers_kind'), table_name='mcp_servers')
    op.drop_table('mcp_servers')
    op.drop_index(op.f('ix_item_title'), table_name='item')
    op.drop_index(op.f('ix_item_owner_id'), table_name='item')
    op.drop_table('item')
    op.drop_index(op.f('ix_users_updated_at'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_teams_updated_at'), table_name='teams')
    op.drop_index(op.f('ix_teams_name'), table_name='teams')
    op.drop_index(op.f('ix_teams_created_at'), table_name='teams')
    op.drop_table('teams')
    op.drop_index(op.f('ix_mcp_templates_status'), table_name='mcp_templates')
    op.drop_index(op.f('ix_mcp_templates_name'), table_name='mcp_templates')
    op.drop_index(op.f('ix_mcp_templates_kind'), table_name='mcp_templates')
    op.drop_table('mcp_templates')
    # ### end Alembic commands ###
