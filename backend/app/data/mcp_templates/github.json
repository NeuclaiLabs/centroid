{
  "id": "github",
  "name": "GitHub API",
  "description": "Interact with GitHub repositories, issues, pull requests, and more.",
  "status": "active",
  "kind": "official",
  "transport": "http",
  "version": "1.0.0",
  "details": {
    "icon": {
      "path": "M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"
    },
    "url": "https://github.com",
    "category": "developer",
    "documentation": "https://docs.github.com/en/rest"
  },
  "run": {
    "command": "docker",
    "args": [
      "run",
      "-i",
      "--rm",
      "-e",
      "GITHUB_PERSONAL_ACCESS_TOKEN",
      "ghcr.io/github/github-mcp-server"
    ],
    "env": {
      "GITHUB_PERSONAL_ACCESS_TOKEN": "${input:github_token}"
    }
  },
  "tools": [
    {
      "name": "add_issue_comment",
      "description": "Add a comment to an existing issue",
      "parameters": {
        "type": "object",
        "properties": {
          "body": {
            "description": "Comment content",
            "type": "string"
          },
          "issue_number": {
            "description": "Issue number to comment on",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number",
          "body"
        ]
      },
      "status": true
    },
    {
      "name": "add_pull_request_review_comment",
      "description": "Add a review comment to a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "body": {
            "description": "The text of the review comment",
            "type": "string"
          },
          "commit_id": {
            "description": "The SHA of the commit to comment on. Required unless in_reply_to is specified.",
            "type": "string"
          },
          "in_reply_to": {
            "description": "The ID of the review comment to reply to. When specified, only body is required and all other parameters are ignored",
            "type": "number"
          },
          "line": {
            "description": "The line of the blob in the pull request diff that the comment applies to. For multi-line comments, the last line of the range",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "path": {
            "description": "The relative path to the file that necessitates a comment. Required unless in_reply_to is specified.",
            "type": "string"
          },
          "pull_number": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "side": {
            "description": "The side of the diff to comment on",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string"
          },
          "start_line": {
            "description": "For multi-line comments, the first line of the range that the comment applies to",
            "type": "number"
          },
          "start_side": {
            "description": "For multi-line comments, the starting side of the diff that the comment applies to",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string"
          },
          "subject_type": {
            "description": "The level at which the comment is targeted",
            "enum": [
              "line",
              "file"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number",
          "body"
        ]
      },
      "status": true
    },
    {
      "name": "create_branch",
      "description": "Create a new branch in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Name for new branch",
            "type": "string"
          },
          "from_branch": {
            "description": "Source branch (defaults to repo default)",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "branch"
        ]
      },
      "status": true
    },
    {
      "name": "create_issue",
      "description": "Create a new issue in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "assignees": {
            "description": "Usernames to assign to this issue",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "body": {
            "description": "Issue body content",
            "type": "string"
          },
          "labels": {
            "description": "Labels to apply to this issue",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "milestone": {
            "description": "Milestone number",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "title": {
            "description": "Issue title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "title"
        ]
      },
      "status": true
    },
    {
      "name": "create_or_update_file",
      "description": "Create or update a single file in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Branch to create/update the file in",
            "type": "string"
          },
          "content": {
            "description": "Content of the file",
            "type": "string"
          },
          "message": {
            "description": "Commit message",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner (username or organization)",
            "type": "string"
          },
          "path": {
            "description": "Path where to create/update the file",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sha": {
            "description": "SHA of file being replaced (for updates)",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "path",
          "content",
          "message",
          "branch"
        ]
      },
      "status": true
    },
    {
      "name": "create_pull_request",
      "description": "Create a new pull request in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "base": {
            "description": "Branch to merge into",
            "type": "string"
          },
          "body": {
            "description": "PR description",
            "type": "string"
          },
          "draft": {
            "description": "Create as draft PR",
            "type": "boolean"
          },
          "head": {
            "description": "Branch containing changes",
            "type": "string"
          },
          "maintainer_can_modify": {
            "description": "Allow maintainer edits",
            "type": "boolean"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "title": {
            "description": "PR title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "title",
          "head",
          "base"
        ]
      },
      "status": true
    },
    {
      "name": "create_pull_request_review",
      "description": "Create a review on a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "body": {
            "description": "Review comment text",
            "type": "string"
          },
          "comments": {
            "description": "Line-specific comments array of objects to place comments on pull request changes. Requires path and body. For line comments use line or position. For multi-line comments use start_line and line with optional side parameters.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "body": {
                  "description": "comment body",
                  "type": "string"
                },
                "line": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "line number in the file to comment on. For multi-line comments, the end of the line range"
                },
                "path": {
                  "description": "path to the file",
                  "type": "string"
                },
                "position": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "position of the comment in the diff"
                },
                "side": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. (LEFT or RIGHT)"
                },
                "start_line": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The first line of the range to which the comment refers. Required for multi-line comments."
                },
                "start_side": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The side of the diff on which the start line resides for multi-line comments. (LEFT or RIGHT)"
                }
              },
              "required": [
                "path",
                "body",
                "position",
                "line",
                "side",
                "start_line",
                "start_side"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "commitId": {
            "description": "SHA of commit to review",
            "type": "string"
          },
          "event": {
            "description": "Review action to perform",
            "enum": [
              "APPROVE",
              "REQUEST_CHANGES",
              "COMMENT"
            ],
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber",
          "event"
        ]
      },
      "status": true
    },
    {
      "name": "create_repository",
      "description": "Create a new GitHub repository in your account",
      "parameters": {
        "type": "object",
        "properties": {
          "autoInit": {
            "description": "Initialize with README",
            "type": "boolean"
          },
          "description": {
            "description": "Repository description",
            "type": "string"
          },
          "name": {
            "description": "Repository name",
            "type": "string"
          },
          "private": {
            "description": "Whether repo should be private",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "status": true
    },
    {
      "name": "fork_repository",
      "description": "Fork a GitHub repository to your account or specified organization",
      "parameters": {
        "type": "object",
        "properties": {
          "organization": {
            "description": "Organization to fork to",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "get_code_scanning_alert",
      "description": "Get details of a specific code scanning alert in a GitHub repository.",
      "parameters": {
        "type": "object",
        "properties": {
          "alertNumber": {
            "description": "The number of the alert.",
            "type": "number"
          },
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "alertNumber"
        ]
      },
      "status": true
    },
    {
      "name": "get_commit",
      "description": "Get details for a commit from a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sha": {
            "description": "Commit SHA, branch name, or tag name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "sha"
        ]
      },
      "status": true
    },
    {
      "name": "get_file_contents",
      "description": "Get the contents of a file or directory from a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Branch to get contents from",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner (username or organization)",
            "type": "string"
          },
          "path": {
            "description": "Path to file/directory",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "path"
        ]
      },
      "status": true
    },
    {
      "name": "get_issue",
      "description": "Get details of a specific issue in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "issue_number": {
            "description": "The number of the issue",
            "type": "number"
          },
          "owner": {
            "description": "The owner of the repository",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ]
      },
      "status": true
    },
    {
      "name": "get_issue_comments",
      "description": "Get comments for a GitHub issue",
      "parameters": {
        "type": "object",
        "properties": {
          "issue_number": {
            "description": "Issue number",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number",
            "type": "number"
          },
          "per_page": {
            "description": "Number of records per page",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ]
      },
      "status": true
    },
    {
      "name": "get_me",
      "description": "Get details of the authenticated GitHub user. Use this when a request include \"me\", \"my\"...",
      "parameters": {
        "type": "object",
        "properties": {
          "reason": {
            "description": "Optional: reason the session was created",
            "type": "string"
          }
        }
      },
      "status": true
    },
    {
      "name": "get_pull_request",
      "description": "Get details of a specific pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "get_pull_request_comments",
      "description": "Get the review comments on a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "get_pull_request_files",
      "description": "Get the list of files changed in a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "get_pull_request_reviews",
      "description": "Get the reviews on a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "get_pull_request_status",
      "description": "Get the combined status of all status checks for a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "get_secret_scanning_alert",
      "description": "Get details of a specific secret scanning alert in a GitHub repository.",
      "parameters": {
        "type": "object",
        "properties": {
          "alertNumber": {
            "description": "The number of the alert.",
            "type": "number"
          },
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "alertNumber"
        ]
      },
      "status": true
    },
    {
      "name": "list_branches",
      "description": "List branches in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "list_code_scanning_alerts",
      "description": "List code scanning alerts in a GitHub repository.",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "ref": {
            "description": "The Git reference for the results you want to list.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          },
          "severity": {
            "description": "Filter code scanning alerts by severity",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "warning",
              "note",
              "error"
            ],
            "type": "string"
          },
          "state": {
            "default": "open",
            "description": "Filter code scanning alerts by state. Defaults to open",
            "enum": [
              "open",
              "closed",
              "dismissed",
              "fixed"
            ],
            "type": "string"
          },
          "tool_name": {
            "description": "The name of the tool used for code scanning.",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "list_commits",
      "description": "Get list of commits of a branch in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sha": {
            "description": "SHA or Branch name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "list_issues",
      "description": "List issues in a GitHub repository with filtering options",
      "parameters": {
        "type": "object",
        "properties": {
          "direction": {
            "description": "Sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "labels": {
            "description": "Filter by labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "since": {
            "description": "Filter by date (ISO 8601 timestamp)",
            "type": "string"
          },
          "sort": {
            "description": "Sort order",
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "type": "string"
          },
          "state": {
            "description": "Filter by state",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "list_pull_requests",
      "description": "List and filter repository pull requests",
      "parameters": {
        "type": "object",
        "properties": {
          "base": {
            "description": "Filter by base branch",
            "type": "string"
          },
          "direction": {
            "description": "Sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "head": {
            "description": "Filter by head user/org and branch",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sort": {
            "description": "Sort by",
            "enum": [
              "created",
              "updated",
              "popularity",
              "long-running"
            ],
            "type": "string"
          },
          "state": {
            "description": "Filter by state",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "list_secret_scanning_alerts",
      "description": "List secret scanning alerts in a GitHub repository.",
      "parameters": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          },
          "resolution": {
            "description": "Filter by resolution",
            "enum": [
              "false_positive",
              "wont_fix",
              "revoked",
              "pattern_edited",
              "pattern_deleted",
              "used_in_tests"
            ],
            "type": "string"
          },
          "secret_type": {
            "description": "A comma-separated list of secret types to return. All default secret patterns are returned. To return generic patterns, pass the token name(s) in the parameter.",
            "type": "string"
          },
          "state": {
            "description": "Filter by state",
            "enum": [
              "open",
              "resolved"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      },
      "status": true
    },
    {
      "name": "merge_pull_request",
      "description": "Merge a pull request",
      "parameters": {
        "type": "object",
        "properties": {
          "commit_message": {
            "description": "Extra detail for merge commit",
            "type": "string"
          },
          "commit_title": {
            "description": "Title for merge commit",
            "type": "string"
          },
          "merge_method": {
            "description": "Merge method",
            "enum": [
              "merge",
              "squash",
              "rebase"
            ],
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "push_files",
      "description": "Push multiple files to a GitHub repository in a single commit",
      "parameters": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Branch to push to",
            "type": "string"
          },
          "files": {
            "description": "Array of file objects to push, each object with path (string) and content (string)",
            "items": {
              "additionalProperties": false,
              "properties": {
                "content": {
                  "description": "file content",
                  "type": "string"
                },
                "path": {
                  "description": "path to the file",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "content"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "Commit message",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "branch",
          "files",
          "message"
        ]
      },
      "status": true
    },
    {
      "name": "search_code",
      "description": "Search for code across GitHub repositories",
      "parameters": {
        "type": "object",
        "properties": {
          "order": {
            "description": "Sort order",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "q": {
            "description": "Search query using GitHub code search syntax",
            "type": "string"
          },
          "sort": {
            "description": "Sort field ('indexed' only)",
            "type": "string"
          }
        },
        "required": [
          "q"
        ]
      },
      "status": true
    },
    {
      "name": "search_issues",
      "description": "Search for issues and pull requests across GitHub repositories",
      "parameters": {
        "type": "object",
        "properties": {
          "order": {
            "description": "Sort order",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "q": {
            "description": "Search query using GitHub issues search syntax",
            "type": "string"
          },
          "sort": {
            "description": "Sort field by number of matches of categories, defaults to best match",
            "enum": [
              "comments",
              "reactions",
              "reactions-+1",
              "reactions--1",
              "reactions-smile",
              "reactions-thinking_face",
              "reactions-heart",
              "reactions-tada",
              "interactions",
              "created",
              "updated"
            ],
            "type": "string"
          }
        },
        "required": [
          "q"
        ]
      },
      "status": true
    },
    {
      "name": "search_repositories",
      "description": "Search for GitHub repositories",
      "parameters": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "query": {
            "description": "Search query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ]
      },
      "status": true
    },
    {
      "name": "search_users",
      "description": "Search for GitHub users",
      "parameters": {
        "type": "object",
        "properties": {
          "order": {
            "description": "Sort order",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "q": {
            "description": "Search query using GitHub users search syntax",
            "type": "string"
          },
          "sort": {
            "description": "Sort field by category",
            "enum": [
              "followers",
              "repositories",
              "joined"
            ],
            "type": "string"
          }
        },
        "required": [
          "q"
        ]
      },
      "status": true
    },
    {
      "name": "update_issue",
      "description": "Update an existing issue in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "assignees": {
            "description": "New assignees",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "body": {
            "description": "New description",
            "type": "string"
          },
          "issue_number": {
            "description": "Issue number to update",
            "type": "number"
          },
          "labels": {
            "description": "New labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "milestone": {
            "description": "New milestone number",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "state": {
            "description": "New state",
            "enum": [
              "open",
              "closed"
            ],
            "type": "string"
          },
          "title": {
            "description": "New title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ]
      },
      "status": true
    },
    {
      "name": "update_pull_request",
      "description": "Update an existing pull request in a GitHub repository",
      "parameters": {
        "type": "object",
        "properties": {
          "base": {
            "description": "New base branch name",
            "type": "string"
          },
          "body": {
            "description": "New description",
            "type": "string"
          },
          "maintainer_can_modify": {
            "description": "Allow maintainer edits",
            "type": "boolean"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number to update",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "state": {
            "description": "New state",
            "enum": [
              "open",
              "closed"
            ],
            "type": "string"
          },
          "title": {
            "description": "New title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    },
    {
      "name": "update_pull_request_branch",
      "description": "Update a pull request branch with the latest changes from the base branch",
      "parameters": {
        "type": "object",
        "properties": {
          "expectedHeadSha": {
            "description": "The expected SHA of the pull request's HEAD ref",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      },
      "status": true
    }
  ]
}
